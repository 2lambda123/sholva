$date
	Thu Jul 20 15:52:15 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module agu_tb $end
$var wire 32 ! address [31:0] $end
$var reg 32 " base [31:0] $end
$var reg 1 # clk $end
$var reg 32 $ current_vec [31:0] $end
$var reg 32 % disp [31:0] $end
$var reg 32 & error_count [31:0] $end
$var reg 32 ' exp_address [31:0] $end
$var reg 32 ( index [31:0] $end
$var reg 1 ) reset $end
$var reg 2 * scale [1:0] $end
$scope module dut $end
$var wire 32 + base [31:0] $end
$var wire 32 , disp [31:0] $end
$var wire 32 - index [31:0] $end
$var wire 2 . scale [1:0] $end
$var wire 32 / address [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx /
bx .
bx -
bx ,
bx +
bx *
1)
bx (
bx '
b0 &
bx %
b0 $
1#
bx "
bx !
$end
#5
0#
#10
1#
0)
#11
b10101010101010101010101010101010 !
b10101010101010101010101010101010 /
b0 *
b0 .
b0 (
b0 -
b0 "
b0 +
b10101010101010101010101010101010 %
b10101010101010101010101010101010 ,
b10101010101010101010101010101010 '
#15
b1 $
0#
#20
1#
#21
b10001000100010001000100010001 "
b10001000100010001000100010001 +
b110011001100110011001100110011 !
b110011001100110011001100110011 /
b100010001000100010001000100010 %
b100010001000100010001000100010 ,
b110011001100110011001100110011 '
#25
b10 $
0#
#30
1#
#31
b10101010101010101010101010101010 "
b10101010101010101010101010101010 +
b10101010101010101010101010101010 !
b10101010101010101010101010101010 /
b0 %
b0 ,
b10101010101010101010101010101010 '
#35
b11 $
0#
#40
1#
#41
b11111111 (
b11111111 -
b10101010101010101010101011111111 !
b10101010101010101010101011111111 /
b10101010101010101010101000000000 "
b10101010101010101010101000000000 +
b10101010101010101010101011111111 '
#45
b100 $
0#
#50
1#
#51
b10001000100010001000100000000 "
b10001000100010001000100000000 +
b110011001100110011001111111111 !
b110011001100110011001111111111 /
b100010001000100010001000000000 %
b100010001000100010001000000000 ,
b110011001100110011001111111111 '
#55
b101 $
0#
#60
1#
#61
b1 *
b1 .
b100 (
b100 -
b11111111111111111111111100000000 "
b11111111111111111111111100000000 +
b11111111111111111111111100001000 !
b11111111111111111111111100001000 /
b0 %
b0 ,
b11111111111111111111111100001000 '
#65
b110 $
0#
#70
1#
#71
b10 *
b10 .
b11111111111111111111111100001000 !
b11111111111111111111111100001000 /
b10 (
b10 -
#75
b111 $
0#
#80
1#
#81
b11111111111111111111111100010000 !
b11111111111111111111111100010000 /
b11 *
b11 .
b11111111111111111111111100010000 '
#85
b1000 $
0#
#90
1#
#91
b1 *
b1 .
b0 "
b0 +
b11111111111111111111111100000100 !
b11111111111111111111111100000100 /
b11111111111111111111111100000000 %
b11111111111111111111111100000000 ,
b11111111111111111111111100000100 '
#95
b1001 $
0#
#100
1#
#101
b11111111111111110000000000000000 "
b11111111111111110000000000000000 +
b11111111111111111111111100000100 !
b11111111111111111111111100000100 /
b1111111100000000 %
b1111111100000000 ,
#105
b1010 $
0#
